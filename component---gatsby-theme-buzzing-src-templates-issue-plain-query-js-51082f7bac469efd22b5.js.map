{"version":3,"sources":["webpack:///../node_modules/gatsby-theme-timeline/src/components/video.js","webpack:///../node_modules/gatsby-theme-timeline/src/components/item-video.js","webpack:///../gatsby-theme-buzzing/src/components/issue-plain-item.js","webpack:///../gatsby-theme-buzzing/src/components/process-string.js","webpack:///../gatsby-theme-buzzing/src/components/issue-plain-page.js","webpack:///../gatsby-theme-buzzing/src/templates/issue-plain-query.js"],"names":["Video","src","width","height","sx","display","justifyContent","maxWidth","preload","loop","autoPlay","muted","itemHero","item","video","provider","url","embed","videoHeight","videoWidth","paddingBottom","pb","position","margin","overflow","data-test","title","id","frameBorder","allowFullScreen","scrolling","left","top","controls","ItemBox","props","type","body","arr","locale","pageContext","datetime","imageRemote","author","originalUrl","authorUrl","channelUrl","channel","finalAuthorUrl","finalAuthor","finalUrl","finalExcerpt","getTitle","getExcerpt","data-index","index","itemScope","itemType","m","listStyle","img","maxHeight","alt","itemProp","h4","href","color","blockquote","p","whiteSpace","regex","fn","key","result","concat","console","log","emoji","tag","ml","mr","mb","push","processString","hr","mt","Items","data","basePath","issueNumber","currentPage","date","dateISO","items","allBlogPost","nodes","siteMetadata","site","siteTitle","pageTitle","i18next","t","seoTitle","seoDescription","mx","px","pt","description","h1","fontSize","siteUrl","rel","content","padding","dateTime","pl","map","PostsPage"],"mappings":"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","file":"component---gatsby-theme-buzzing-src-templates-issue-plain-query-js-51082f7bac469efd22b5.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Box } from \"theme-ui\"\n\nexport default function Video({ src, width, height }) {\n  return (\n    <Box sx={{ display: `flex`, justifyContent: `center`, maxWidth: `full` }}>\n      <video\n        preload=\"auto\"\n        loop={true}\n        autoPlay={true}\n        muted={true}\n        width={width}\n        height={height}\n        sx={{ maxWidth: `full`, width: `full`, height: `full` }}\n      >\n        <source src={src} />\n      </video>\n    </Box>\n  )\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport ReactPlayer from \"react-player\"\nimport Video from \"./video\"\nconst itemHero = ({ item }) => {\n  const { video, provider } = item\n\n  if (!video || !video.url) {\n    return null\n  }\n  if (provider === `Reddit`) {\n    const embed = video.embed\n    const videoHeight = video.height\n    const videoWidth = video.width\n    let paddingBottom = `56.25%`\n    if (videoHeight && videoWidth) {\n      if (videoHeight > videoWidth) {\n        paddingBottom = `100%`\n      } else {\n        paddingBottom = `${(videoHeight * 100) / videoWidth}%`\n      }\n    }\n\n    return (\n      <div sx={{ pb: 0 }}>\n        {embed ? (\n          <div\n            sx={{\n              position: `relative`,\n              height: 0,\n              margin: 0,\n              overflow: `hidden`,\n              maxWidth: `full`,\n              paddingBottom: paddingBottom,\n            }}\n          >\n            <iframe\n              data-test=\"item-embed-video\"\n              title={`video ${item.id}`}\n              frameBorder=\"0\"\n              allowFullScreen\n              scrolling=\"no\"\n              src={video.url}\n              sx={{\n                width: `full`,\n                height: `full`,\n                position: `absolute`,\n                left: 0,\n                top: 0,\n              }}\n            ></iframe>\n          </div>\n        ) : (\n          video && (\n            <Video\n              embed={embed}\n              src={video.url}\n              height={videoHeight}\n              width={videoWidth}\n            ></Video>\n          )\n        )}\n      </div>\n    )\n  }\n  return (\n    <div data-test=\"item-video-container\" sx={{ pb: 0 }}>\n      <div sx={{ position: `relative`, pb: `56.25%` }}>\n        <ReactPlayer\n          controls\n          sx={{ position: `absolute`, top: 0, left: 0 }}\n          width=\"100%\"\n          height=\"100%\"\n          url={video.url}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default itemHero\n","/** @jsx jsx */\nimport { jsx, Styled, Link } from \"theme-ui\"\nimport ProcessString from \"./process-string\"\nimport { getTitle, getExcerpt } from \"../util\"\nimport Video from \"gatsby-theme-timeline/src/components/item-video\"\nconst ItemBox = props => {\n  const {\n    item,\n    pageContext: { locale },\n  } = props\n  let {\n    datetime,\n    imageRemote,\n    author,\n    originalUrl,\n    authorUrl,\n    channelUrl,\n    channel,\n    url,\n    provider,\n  } = item\n  const finalAuthorUrl = authorUrl || channelUrl\n  const finalAuthor = author || channel\n  const finalUrl = originalUrl || url\n  const finalExcerpt =\n    provider === \"Twitter\" ? getTitle(item, locale) : getExcerpt(item, locale)\n  return (\n    <li\n      data-test=\"item-container\"\n      data-index={props.index}\n      itemScope\n      itemType=\"https://schema.org/Article https://schema.org/itemListElement\"\n      sx={{ m: 0, listStyle: \"none\" }}\n    >\n      {imageRemote && (\n        <Styled.img\n          sx={{ maxHeight: \"512px\", display: \"block\" }}\n          src={imageRemote}\n          alt=\"item hero\"\n          itemProp=\"image\"\n        ></Styled.img>\n      )}\n      <Video item={item}></Video>\n      <br></br>\n      {provider === \"Twitter\" ? null : (\n        <Styled.h4>\n          <Link itemProp=\"name\" href={finalUrl} sx={{ color: \"text\" }}>\n            {getTitle(item, locale)}\n          </Link>\n        </Styled.h4>\n      )}\n      <Styled.blockquote data-test=\"item-header\" sx={{ color: \"#718096\" }}>\n        {finalExcerpt && (\n          <Styled.p\n            itemProp=\"description\"\n            sx={{\n              color: \"textMuted\",\n              whiteSpace: `pre-line`,\n            }}\n          >\n            {ProcessString(provider, finalExcerpt)}\n          </Styled.p>\n        )}\n        <Styled.p data-test=\"source\">\n          Posted by{\" \"}\n          <Link href={finalAuthorUrl} itemProp=\"author\">\n            {finalAuthor}\n          </Link>{\" \"}\n          at{\" \"}\n          <Link href={finalUrl} itemProp=\"datePublished\">\n            {datetime}\n          </Link>{\" \"}\n          on {provider}{\" \"}\n          {provider === \"Reddit\" && (\n            <Link href={channelUrl} itemProp=\"datePublished\">\n              {`/r/${channel}`}\n            </Link>\n          )}\n        </Styled.p>\n      </Styled.blockquote>\n      <Styled.hr\n        sx={{\n          mt: \"48px\",\n          mb: \"48px\",\n        }}\n      ></Styled.hr>\n    </li>\n  )\n}\nexport default ItemBox\n","/** @jsx jsx */\nimport { jsx, Link } from \"theme-ui\"\nimport processString from \"react-process-string\"\nimport Twemoji from \"react-twemoji\"\n//\nexport default function processReactString(type, body) {\n  let arr = [\n    {\n      regex: /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/,\n      fn: (key, result) => {\n        return (\n          <Link key={key} href={`${result[0]}`}>\n            <span> {result[0]}</span>\n          </Link>\n        )\n      },\n    },\n  ]\n  if (type === \"Twitter\") {\n    arr = arr.concat([\n      {\n        regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:(?:@|＠)(?!\\/))([a-zA-Z0-9/_]{1,15})(?:\\b(?!@|＠)|$)/,\n        fn: (key, result) => {\n          return (\n            <Link href={`https://twitter.com/${result[1]}`} key={key}>\n              <span> @{result[1]}</span>\n            </Link>\n          )\n        },\n      },\n      {\n        regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n        fn: (key, result) => {\n          return (\n            <Link key={key} href={`https://twitter.com/hashtag/${result[1]}`}>\n              <span> #{result[1]}</span>\n            </Link>\n          )\n        },\n      },\n      {\n        regex: /(\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/,\n        fn: (key, result) => {\n          console.log(\"result[1]\", result[1])\n\n          const emoji = (\n            <Twemoji\n              tag=\"span\"\n              sx={{\n                \"> img\": {\n                  width: `1.2rem`,\n                  ml: `0.2rem`,\n                  mr: `0.075rem`,\n                  mb: `-0.2rem`,\n                },\n              }}\n              key={key}\n            >\n              {result[1]}\n            </Twemoji>\n          )\n          console.log(\"emoji\", emoji)\n          return emoji\n        },\n      },\n    ])\n  } else if (type === \"Youtube\") {\n    arr.push({\n      regex: /(?:^|[^a-zA-Z0-9_＠!@#$%&*])(?:#(?!\\/))([a-zA-Z0-9/_]{1,280})(?:\\b(?!#)|$)/,\n      fn: (key, result) => {\n        return (\n          <Link key={key} href={`https://www.youtube.com/hashtag/${result[1]}`}>\n            <span> #{result[1]}</span>\n          </Link>\n        )\n      },\n    })\n  }\n  const finalBody = processString(arr)(body)\n  return finalBody\n}\n","/** @jsx jsx */\nimport ItemBox from \"./issue-plain-item\"\nimport { jsx, Styled, Link } from \"theme-ui\"\nimport i18next from \"i18next\"\nimport SEO from \"gatsby-theme-timeline/src/components/seo\"\nconst Items = ({ data, pageContext }) => {\n  const { basePath, currentPage: issueNumber, date, dateISO } = pageContext\n  const items = data.allBlogPost.nodes\n  const {\n    site: { siteMetadata },\n  } = data\n  const siteTitle = siteMetadata.title\n  const pageTitle =\n    siteMetadata.title +\n    \": \" +\n    i18next.t(`Weekly Selection`) +\n    \"-\" +\n    i18next.t(\"Issue {{issueNumber}}\", `Issue ${issueNumber}`, {\n      issueNumber,\n    })\n  const seoTitle =\n    i18next.t(`Weekly Selection`) +\n    \"-\" +\n    i18next.t(\"Issue {{issueNumber}}\", `Issue ${issueNumber}`, {\n      issueNumber,\n    })\n  const seoDescription = i18next.t(\n    `Click to view Issue {{issueNumber}} of {{siteTitle}}`,\n    {\n      siteTitle,\n      issueNumber,\n    }\n  )\n  return (\n    <div\n      sx={{\n        maxWidth: [`full`, `3xl`],\n        mx: `auto`,\n        px: [4, 4],\n        pt: 4,\n      }}\n      itemScope\n      itemType=\"https://schema.org/ItemList\"\n    >\n      <SEO title={seoTitle} description={seoDescription} />\n      <Styled.h1 sx={{ mb: 3, fontSize: 4 }} itemProp=\"name\">\n        {pageTitle}\n      </Styled.h1>\n      <address sx={{ pb: 4 }}>\n        <Link href={siteMetadata.siteUrl} rel=\"author\">\n          {siteMetadata.author}\n        </Link>\n        <time\n          sx={{\n            color: \"textMuted\",\n            \"&:before\": {\n              content: \"'\\u2022'\",\n              padding: \"0 7px\",\n            },\n          }}\n          dateTime={dateISO}\n        >\n          {date}\n        </time>\n      </address>\n      <article>\n        <ul sx={{ pl: 0, m: 0 }}>\n          {items.map((item, index) => {\n            return (\n              <ItemBox\n                key={`item-box-${index}`}\n                index={index}\n                basePath={basePath}\n                item={item}\n                pageContext={pageContext}\n              ></ItemBox>\n            )\n          })}\n        </ul>\n      </article>\n    </div>\n  )\n}\nexport default Items\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/issue-plain-page\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query CustomItemsIssuesPostsQuery(\n    $maxHeight: Int!\n    $skip: Int!\n    $limit: Int!\n    $filter: BlogPostFilterInput\n    $tagsFilter: BlogPostFilterInput\n  ) {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        siteUrl\n        social {\n          name\n          url\n          external\n          prefetch\n        }\n        menuLinks {\n          name\n          url\n          external\n          prefetch\n        }\n        localize {\n          locale\n          title\n          description\n          social {\n            name\n            url\n            external\n            prefetch\n          }\n          menuLinks {\n            name\n            url\n            external\n            prefetch\n          }\n        }\n      }\n    }\n    tagsGroup: allBlogPost(\n      sort: { fields: [date, slug], order: DESC }\n      filter: $tagsFilter\n    ) {\n      group(field: tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    allBlogPost(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [date, slug], order: DESC }\n      filter: $filter\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        dateISO: date\n        datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n        tags\n        image {\n          childImageSharp {\n            fluid(maxHeight: $maxHeight) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        imageAlt\n        ... on SocialMediaPost {\n          provider\n          thirdPartyId\n          url\n          originalUrl\n          imageRemote\n          video {\n            url\n            embed\n            width\n            height\n          }\n          channel\n          channelUrl\n          author\n          authorUrl\n          authorImage {\n            childImageSharp {\n              fixed(width: 48, height: 48) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          authorSlug\n          score\n          views\n          sharedCount\n          likeCount\n          sharedContent {\n            excerpt\n            slug\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            dateISO: date\n            datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n            tags\n            imageRemote\n            image {\n              childImageSharp {\n                fluid(maxHeight: $maxHeight) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            imageAlt\n            authorImage {\n              childImageSharp {\n                fixed(width: 24, height: 24) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            video {\n              url\n              embed\n              width\n              height\n            }\n            channel\n            channelUrl\n            author\n            authorUrl\n            authorSlug\n            score\n            views\n            sharedCount\n            likeCount\n          }\n          parent {\n            ... on RedditJson {\n              localize {\n                title\n                the_new_excerpt\n                locale\n              }\n            }\n            ... on HnJson {\n              localize {\n                title\n                locale\n              }\n            }\n            ... on RedirectJson {\n              localize {\n                title\n                locale\n              }\n            }\n            ... on YoutubeJson {\n              localize {\n                title\n                description\n                locale\n              }\n            }\n            ... on PhJson {\n              localize {\n                description\n                tagline\n                locale\n              }\n            }\n            ... on TweetJson {\n              localize {\n                locale\n                full_text\n                quoted_status_full_text\n                retweeted_status_full_text\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}