{"version":3,"sources":["webpack:///../gatsby-theme-buzzing/src/components/issue-plain-item.js","webpack:///../gatsby-theme-buzzing/src/components/issue-plain-page.js","webpack:///../gatsby-theme-buzzing/src/templates/issue-plain-query.js"],"names":["ItemBox","props","item","title","datetime","excerpt","imageRemote","authorName","slug","data-test","data-index","index","itemScope","itemType","h3","sx","itemProp","href","color","p","mt","img","maxHeight","m","display","src","alt","hr","my","Items","data","pageContext","basePath","issueNumber","currentPage","date","dateISO","items","allBlogPost","nodes","pageTitle","site","siteMetadata","i18next","t","maxWidth","mx","px","pt","h2","mb","dateTime","map","key","PostsPage"],"mappings":"0IAqDeA,G,UAlDC,SAAAC,GAAU,IAChBC,EAASD,EAATC,KACFC,EAA4DD,EAA5DC,MAAOC,EAAqDF,EAArDE,SAAUC,EAA2CH,EAA3CG,QAASC,EAAkCJ,EAAlCI,YAAaC,EAAqBL,EAArBK,WAAYC,EAASN,EAATM,KACzD,OACE,kBACEC,YAAU,iBACVC,aAAYT,EAAMU,MAClBC,WAAS,EACTC,SAAS,iEAET,YAAC,IAAOC,GAAR,CAAWC,GAAI,IACb,YAAC,IAAD,CAAMC,SAAS,OAAOC,KAAK,KAAKF,GAAI,CAAEG,MAAO,SAC1Cf,IAGL,YAAC,IAAOgB,EAAR,CAAUV,YAAU,cAAcM,GAAI,CAAEG,MAAO,UAAWE,GAAI,UAA9D,YACY,IACV,YAAC,IAAD,CAAMH,KAAK,KAAKD,SAAS,UACtBT,GACK,IAJV,KAKK,IACH,YAAC,IAAD,CAAMU,KAAMT,EAAMQ,SAAS,iBACxBZ,IAGJE,GACC,YAAC,IAAOe,IAAR,CACEN,GAAI,CAAEO,UAAW,QAASC,EAAG,SAAUC,QAAS,SAChDC,IAAKnB,EACLoB,IAAI,YACJV,SAAS,UAIb,YAAC,IAAOG,EAAR,CACEH,SAAS,cACTD,GAAI,CACFG,MAAO,cAGRb,GAEH,YAAC,IAAOsB,GAAR,CACEZ,GAAI,CACFa,GAAI,a,YCKCC,EAhDD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACbC,EAAsDD,EAAtDC,SAAuBC,EAA+BF,EAA5CG,YAA0BC,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAC5CC,EAAQP,EAAKQ,YAAYC,MAIzBC,EADFV,EADFW,KAAQC,aAGKvC,MACb,IACAwC,IAAQC,EAAR,oBACA,IACAD,IAAQC,EAAE,wBAAV,SAA4CX,EAAe,CACzDA,gBAGJ,OACE,mBACElB,GAAI,CACF8B,SAAU,CAAC,OAAD,mBACVC,GAAG,OACHC,GAAI,CAAC,EAAG,GACRC,GAAI,GAENpC,WAAS,EACTC,SAAS,+BAET,YAAC,IAAOoC,GAAR,CAAWlC,GAAI,CAAEmC,GAAI,GAAKlC,SAAS,QAChCwB,GAEH,oBAAMzB,GAAI,CAAEG,MAAO,aAAeiC,SAAUf,GACzCD,GAEH,sBACGE,EAAMe,KAAI,SAAClD,EAAMS,GAChB,OACE,YAAC,EAAD,CACE0C,IAAG,YAAc1C,EACjBA,MAAOA,EACPqB,SAAUA,EACV9B,KAAMA,EACN6B,YAAaA,UCzCZuB","file":"component---gatsby-theme-buzzing-src-templates-issue-plain-query-js-570244289719d219697b.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Styled, Link } from \"theme-ui\"\n\nconst ItemBox = props => {\n  const { item } = props\n  let { title, datetime, excerpt, imageRemote, authorName, slug } = item\n  return (\n    <li\n      data-test=\"item-container\"\n      data-index={props.index}\n      itemScope\n      itemType=\"https://schema.org/Article https://schema.org/itemListElement\"\n    >\n      <Styled.h3 sx={{}}>\n        <Link itemProp=\"name\" href=\"/#\" sx={{ color: \"text\" }}>\n          {title}\n        </Link>\n      </Styled.h3>\n      <Styled.p data-test=\"item-header\" sx={{ color: \"#718096\", mt: \"-10px\" }}>\n        Posted by{\" \"}\n        <Link href=\"/#\" itemProp=\"author\">\n          {authorName}\n        </Link>{\" \"}\n        at{\" \"}\n        <Link href={slug} itemProp=\"datePublished\">\n          {datetime}\n        </Link>\n      </Styled.p>\n      {imageRemote && (\n        <Styled.img\n          sx={{ maxHeight: \"512px\", m: \"0 auto\", display: \"block\" }}\n          src={imageRemote}\n          alt=\"item hero\"\n          itemProp=\"image\"\n        ></Styled.img>\n      )}\n\n      <Styled.p\n        itemProp=\"description\"\n        sx={{\n          color: \"textMuted\",\n        }}\n      >\n        {excerpt}\n      </Styled.p>\n      <Styled.hr\n        sx={{\n          my: \"48px\",\n        }}\n      ></Styled.hr>\n    </li>\n  )\n}\nexport default ItemBox\n","/** @jsx jsx */\nimport ItemBox from \"./issue-plain-item\"\nimport { jsx, Styled } from \"theme-ui\"\nimport i18next from \"i18next\"\nconst Items = ({ data, pageContext }) => {\n  const { basePath, currentPage: issueNumber, date, dateISO } = pageContext\n  const items = data.allBlogPost.nodes\n  const {\n    site: { siteMetadata },\n  } = data\n  const pageTitle =\n    siteMetadata.title +\n    \" \" +\n    i18next.t(`Weekly Selection`) +\n    \"-\" +\n    i18next.t(\"Issue {{issueNumber}}\", `Issue ${issueNumber}`, {\n      issueNumber,\n    })\n\n  return (\n    <div\n      sx={{\n        maxWidth: [`full`, `3xl`, `3xl`, `3xl`],\n        mx: `auto`,\n        px: [3, 4],\n        pt: 4,\n      }}\n      itemScope\n      itemType=\"https://schema.org/ItemList\"\n    >\n      <Styled.h2 sx={{ mb: 3 }} itemProp=\"name\">\n        {pageTitle}\n      </Styled.h2>\n      <time sx={{ color: \"textMuted\" }} dateTime={dateISO}>\n        {date}\n      </time>\n      <ul>\n        {items.map((item, index) => {\n          return (\n            <ItemBox\n              key={`item-box-${index}`}\n              index={index}\n              basePath={basePath}\n              item={item}\n              pageContext={pageContext}\n            ></ItemBox>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\nexport default Items\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/issue-plain-page\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query CustomItemsIssuesPostsQuery(\n    $maxHeight: Int!\n    $skip: Int!\n    $limit: Int!\n    $filter: BlogPostFilterInput\n    $tagsFilter: BlogPostFilterInput\n  ) {\n    site {\n      siteMetadata {\n        title\n        description\n        social {\n          name\n          url\n          external\n          prefetch\n        }\n        menuLinks {\n          name\n          url\n          external\n          prefetch\n        }\n        localize {\n          locale\n          title\n          description\n          social {\n            name\n            url\n            external\n            prefetch\n          }\n          menuLinks {\n            name\n            url\n            external\n            prefetch\n          }\n        }\n      }\n    }\n    tagsGroup: allBlogPost(\n      sort: { fields: [date, slug], order: DESC }\n      filter: $tagsFilter\n    ) {\n      group(field: tags) {\n        fieldValue\n        totalCount\n      }\n    }\n    allBlogPost(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [date, slug], order: DESC }\n      filter: $filter\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        dateISO: date\n        datetime: date(formatString: \"YYYY-MM-DD HH:mm\")\n        tags\n        image {\n          childImageSharp {\n            fluid(maxHeight: $maxHeight) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        imageAlt\n        ... on RedditPost {\n          imageRemote\n          video\n          videoWidth\n          videoHeight\n          permalink\n          isSelf\n          postHint\n          isVideo\n          subreddit\n          authorName\n          url\n          score\n          redditId\n          parent {\n            ... on RedditJson {\n              the_new_excerpt\n              localize {\n                title\n                the_new_excerpt\n                locale\n              }\n            }\n          }\n        }\n        ... on HnPost {\n          imageRemote\n          authorName\n          score\n          hnId\n          url\n          parent {\n            ... on HnJson {\n              localize {\n                title\n                locale\n              }\n            }\n          }\n        }\n        ... on RedirectPost {\n          authorName\n          authorUrl\n          url\n          imageRemote\n          parent {\n            ... on RedirectJson {\n              localize {\n                title\n                locale\n              }\n            }\n          }\n        }\n        ... on YoutubePost {\n          imageRemote\n          authorName\n          authorUrl\n          views\n          score\n          url\n          video\n          parent {\n            ... on YoutubeJson {\n              localize {\n                title\n                description\n                locale\n              }\n            }\n          }\n        }\n        ... on PhPost {\n          imageRemote\n          authorName\n          authorUrl\n          phUrl\n          score\n          url\n          tagline\n          video\n          phId\n          parent {\n            ... on PhJson {\n              localize {\n                description\n                tagline\n                locale\n              }\n            }\n          }\n        }\n        ... on TweetPost {\n          idStr\n          retweeted\n          isQuoteStatus\n          imageRemote\n          quoteImageRemote\n          authorAvatarRemote\n          quoteAuthorAvatarRemote\n          quoteBody\n          quoteAuthorName\n          quoteAuthorScreenName\n          quoteAuthorAvatar {\n            childImageSharp {\n              fixed(width: 24, height: 24) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          quoteImage {\n            childImageSharp {\n              fluid(maxHeight: $maxHeight) {\n                ...GatsbyImageSharpFluid\n                src\n              }\n            }\n          }\n          authorName\n          authorScreenName\n          authorAvatar {\n            childImageSharp {\n              fixed(width: 48, height: 48) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n          parent {\n            ... on TweetJson {\n              localize {\n                locale\n                full_text\n                quoted_status_full_text\n                retweeted_status_full_text\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}